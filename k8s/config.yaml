---
# Source: config/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: config
  namespace: vex
  labels:
    helm.sh/chart: config-0.1.0
    app.kubernetes.io/name: config
    app.kubernetes.io/instance: config
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: Helm
data:
  DSN: cG9zdGdyZXM6Ly9wb3N0Z3JlczpwYXNzd29yZEBwb3N0Z3Jlcy5wb3N0Z3Jlcy5zdmMuY2x1c3Rlci5sb2NhbDo1NDMyL3ZleA==
---
# Source: config/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: config
  namespace: vex
  labels:
    helm.sh/chart: config-0.1.0
    app.kubernetes.io/name: config
    app.kubernetes.io/instance: config
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: Helm
data:
  API_PORT: "8080"
  BROKERS: kafka-clusterip.kafka.svc.cluster.local:9092
  DEPROVISION_TOPIC: vex-deprovision
  METRICS_PATH: /metrics
  METRICS_PORT: "8081"
  PROVISION_TOPIC: vex-provision
---
# Source: config/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: config
  namespace: vex
  labels:
    helm.sh/chart: config-0.1.0
    app.kubernetes.io/name: config
    app.kubernetes.io/instance: config
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 8080
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: config
    app.kubernetes.io/instance: config
---
# Source: config/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: config
  namespace: vex
  labels:
    helm.sh/chart: config-0.1.0
    app.kubernetes.io/name: config
    app.kubernetes.io/instance: config
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    prometheus.io/scrape: 'true'
    prometheus.io/port: '8081'
    prometheus.io/path: '/metrics'
spec:
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: config
      app.kubernetes.io/instance: config
  template:
    metadata:
      labels:
        app.kubernetes.io/name: config
        app.kubernetes.io/instance: config
    spec:
      serviceAccountName: default
      securityContext:
        {}
      containers:
        - name: config
          securityContext:
            {}
          image: "broswen/vex:latest"
          imagePullPolicy: Always
          envFrom:
            - configMapRef:
                name: config
            - secretRef:
                name: config
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /healthz
              port: http
          readinessProbe:
            httpGet:
              path: /healthz
              port: http
          resources:
            limits:
              cpu: 150m
              memory: 256Mi
            requests:
              cpu: 100m
              memory: 128Mi
---
# Source: config/templates/ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: config
  namespace: vex
  labels:
    helm.sh/chart: config-0.1.0
    app.kubernetes.io/name: config
    app.kubernetes.io/instance: config
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: Helm
spec:
  rules:
    - host: "vex.broswen.com"
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: config
                port:
                  number: 8080
